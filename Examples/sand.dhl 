comp or<N: numeral>(..vals: [bool; N]) -> bool {
    so_far = false;
    foreach val: vals {
        so_far = select(val, true, so_far);
    }
    so_far
}
comp and<N: numeral>(..vals: [bool; N]) -> bool {
    so_far = true;
    foreach val: vals {
        so_far = select(val, so_far, false);
    }
    so_far
}
comp not(val: bool) -> bool {
    select(val, false, true)
}
comp cell(
    up_left: bool,
    up: bool,
    up_right: bool,
    left_left: bool,
    left: bool,
    center: bool,
    right: bool,
    down_left: bool,
    down: bool,
    down_right: bool) -> bool {
    val = or(
        up,
        and(up_left, left, left_left),
        and(up_right, right),
        and(center, not(or(down_left, down, down_right))));
    val
}
comp update_cells<W: numeral, H: numeral>(cells: [[bool; H]; W]) -> [[bool; H]; W] {
    map x: Range<W> map y: Range<H> {
        up_left = false;
        up = false;
        up_right = false;
        left_left = false;
        left = false;
        center = false;
        right = false;
        down_left = false;
        down = false;
        down_right = false;
        if Gt<x, 0> {
            left = cells[Pred<x>][y];
            if Gt<y, 0> {
                up_left = cells[Pred<x>][Pred<y>];
            }
            if Lt<y, Pred<H>> {
                down_left = cells[Pred<x>][Succ<y>];
            }
        }
        if Gt<x, 1> {
            left_left = cells[Pred<Pred<x>>][y];
        }
        if Lt<x, Pred<W>> {
            right = cells[Succ<x>][y];
            if Gt<y, 0> {
                up_right = cells[Succ<x>][Pred<y>];
            }
            if Lt<y, Pred<H>> {
                down_right = cells[Succ<x>][Succ<y>];
            }
        }
        center = cells[x][y];
        if Gt<y, 0> {
            up = cells[x][Pred<y>];
        }
        if Lt<y, Pred<H>> {
            down = cells[x][Succ<y>];
        }
        cell(
            up_left,
            up,
            up_right,
            left_left,
            left,
            center,
            right,
            down_left,
            down,
            down_right,
        )
    }
}
cells = update_cells(@[[bool; 10]; 10]);
cells
